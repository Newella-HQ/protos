// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: usernovels/usernovels.proto

package usernovels

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserNovels link can have several types, for example READ and FAVOURITE
type UserNovelsType int32

const (
	UserNovelsType_READ      UserNovelsType = 0
	UserNovelsType_FAVOURITE UserNovelsType = 1
	UserNovelsType_OWN       UserNovelsType = 2
	UserNovelsType_CREATE    UserNovelsType = 3
)

// Enum value maps for UserNovelsType.
var (
	UserNovelsType_name = map[int32]string{
		0: "READ",
		1: "FAVOURITE",
		2: "OWN",
		3: "CREATE",
	}
	UserNovelsType_value = map[string]int32{
		"READ":      0,
		"FAVOURITE": 1,
		"OWN":       2,
		"CREATE":    3,
	}
)

func (x UserNovelsType) Enum() *UserNovelsType {
	p := new(UserNovelsType)
	*p = x
	return p
}

func (x UserNovelsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserNovelsType) Descriptor() protoreflect.EnumDescriptor {
	return file_usernovels_usernovels_proto_enumTypes[0].Descriptor()
}

func (UserNovelsType) Type() protoreflect.EnumType {
	return &file_usernovels_usernovels_proto_enumTypes[0]
}

func (x UserNovelsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserNovelsType.Descriptor instead.
func (UserNovelsType) EnumDescriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{0}
}

// lower-case for db compatibility
type NovelLength int32

const (
	NovelLength_small  NovelLength = 0
	NovelLength_normal NovelLength = 1
	NovelLength_large  NovelLength = 2
)

// Enum value maps for NovelLength.
var (
	NovelLength_name = map[int32]string{
		0: "small",
		1: "normal",
		2: "large",
	}
	NovelLength_value = map[string]int32{
		"small":  0,
		"normal": 1,
		"large":  2,
	}
)

func (x NovelLength) Enum() *NovelLength {
	p := new(NovelLength)
	*p = x
	return p
}

func (x NovelLength) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NovelLength) Descriptor() protoreflect.EnumDescriptor {
	return file_usernovels_usernovels_proto_enumTypes[1].Descriptor()
}

func (NovelLength) Type() protoreflect.EnumType {
	return &file_usernovels_usernovels_proto_enumTypes[1]
}

func (x NovelLength) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NovelLength.Descriptor instead.
func (NovelLength) EnumDescriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{1}
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{0}
}

func (x *Genre) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Novel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Length      NovelLength `protobuf:"varint,4,opt,name=length,proto3,enum=usernovels.NovelLength" json:"length,omitempty"`
	Image       string      `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Rating      float64     `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Genre       *Genre      `protobuf:"bytes,7,opt,name=genre,proto3" json:"genre,omitempty"`
	UserId      string      `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Novel) Reset() {
	*x = Novel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Novel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Novel) ProtoMessage() {}

func (x *Novel) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Novel.ProtoReflect.Descriptor instead.
func (*Novel) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{1}
}

func (x *Novel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Novel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Novel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Novel) GetLength() NovelLength {
	if x != nil {
		return x.Length
	}
	return NovelLength_small
}

func (x *Novel) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Novel) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Novel) GetGenre() *Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Novel) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUsersNovelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type   UserNovelsType `protobuf:"varint,2,opt,name=type,proto3,enum=usernovels.UserNovelsType" json:"type,omitempty"`
	Limit  int64          `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int64          `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUsersNovelsRequest) Reset() {
	*x = GetUsersNovelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersNovelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersNovelsRequest) ProtoMessage() {}

func (x *GetUsersNovelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersNovelsRequest.ProtoReflect.Descriptor instead.
func (*GetUsersNovelsRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{2}
}

func (x *GetUsersNovelsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUsersNovelsRequest) GetType() UserNovelsType {
	if x != nil {
		return x.Type
	}
	return UserNovelsType_READ
}

func (x *GetUsersNovelsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUsersNovelsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUsersNovelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Novels []*Novel `protobuf:"bytes,1,rep,name=novels,proto3" json:"novels,omitempty"`
}

func (x *GetUsersNovelsResponse) Reset() {
	*x = GetUsersNovelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersNovelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersNovelsResponse) ProtoMessage() {}

func (x *GetUsersNovelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersNovelsResponse.ProtoReflect.Descriptor instead.
func (*GetUsersNovelsResponse) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{3}
}

func (x *GetUsersNovelsResponse) GetNovels() []*Novel {
	if x != nil {
		return x.Novels
	}
	return nil
}

type SetNovelRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NovelId int64   `protobuf:"varint,1,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
	Rating  float32 `protobuf:"fixed32,2,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *SetNovelRatingRequest) Reset() {
	*x = SetNovelRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNovelRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNovelRatingRequest) ProtoMessage() {}

func (x *SetNovelRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNovelRatingRequest.ProtoReflect.Descriptor instead.
func (*SetNovelRatingRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{4}
}

func (x *SetNovelRatingRequest) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *SetNovelRatingRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type CommentUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Picture  string `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
}

func (x *CommentUserData) Reset() {
	*x = CommentUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentUserData) ProtoMessage() {}

func (x *CommentUserData) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentUserData.ProtoReflect.Descriptor instead.
func (*CommentUserData) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{5}
}

func (x *CommentUserData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentUserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommentUserData) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text      string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	User      *CommentUserData       `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{6}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUser() *CommentUserData {
	if x != nil {
		return x.User
	}
	return nil
}

type GetCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NovelId int64 `protobuf:"varint,1,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
	Limit   int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page    int64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCommentsRequest) Reset() {
	*x = GetCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsRequest) ProtoMessage() {}

func (x *GetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{7}
}

func (x *GetCommentsRequest) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *GetCommentsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCommentsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *GetCommentsResponse) Reset() {
	*x = GetCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsResponse) ProtoMessage() {}

func (x *GetCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetCommentsResponse) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{8}
}

func (x *GetCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CommentNovelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NovelId int64  `protobuf:"varint,1,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CommentNovelRequest) Reset() {
	*x = CommentNovelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentNovelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentNovelRequest) ProtoMessage() {}

func (x *CommentNovelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentNovelRequest.ProtoReflect.Descriptor instead.
func (*CommentNovelRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{9}
}

func (x *CommentNovelRequest) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *CommentNovelRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CommentNovelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommentNovelResponse) Reset() {
	*x = CommentNovelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentNovelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentNovelResponse) ProtoMessage() {}

func (x *CommentNovelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentNovelResponse.ProtoReflect.Descriptor instead.
func (*CommentNovelResponse) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{10}
}

func (x *CommentNovelResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCommentNovelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCommentNovelRequest) Reset() {
	*x = DeleteCommentNovelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentNovelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentNovelRequest) ProtoMessage() {}

func (x *DeleteCommentNovelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentNovelRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentNovelRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCommentNovelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ComplainNovelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NovelId     int64  `protobuf:"varint,1,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
	Subject     string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ComplainNovelRequest) Reset() {
	*x = ComplainNovelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainNovelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainNovelRequest) ProtoMessage() {}

func (x *ComplainNovelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainNovelRequest.ProtoReflect.Descriptor instead.
func (*ComplainNovelRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{12}
}

func (x *ComplainNovelRequest) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *ComplainNovelRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ComplainNovelRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ComplainNovelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ComplainNovelResponse) Reset() {
	*x = ComplainNovelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainNovelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainNovelResponse) ProtoMessage() {}

func (x *ComplainNovelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainNovelResponse.ProtoReflect.Descriptor instead.
func (*ComplainNovelResponse) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{13}
}

func (x *ComplainNovelResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserComplainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserComplainsRequest) Reset() {
	*x = GetUserComplainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserComplainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserComplainsRequest) ProtoMessage() {}

func (x *GetUserComplainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserComplainsRequest.ProtoReflect.Descriptor instead.
func (*GetUserComplainsRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserComplainsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserComplainsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type Complain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject     string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UserId      string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NovelId     int64  `protobuf:"varint,6,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
}

func (x *Complain) Reset() {
	*x = Complain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complain) ProtoMessage() {}

func (x *Complain) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complain.ProtoReflect.Descriptor instead.
func (*Complain) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{15}
}

func (x *Complain) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Complain) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Complain) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Complain) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Complain) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Complain) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

type GetUserComplainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Complains []*Complain `protobuf:"bytes,1,rep,name=complains,proto3" json:"complains,omitempty"`
}

func (x *GetUserComplainsResponse) Reset() {
	*x = GetUserComplainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserComplainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserComplainsResponse) ProtoMessage() {}

func (x *GetUserComplainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserComplainsResponse.ProtoReflect.Descriptor instead.
func (*GetUserComplainsResponse) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserComplainsResponse) GetComplains() []*Complain {
	if x != nil {
		return x.Complains
	}
	return nil
}

type DeleteComplainNovelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteComplainNovelRequest) Reset() {
	*x = DeleteComplainNovelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usernovels_usernovels_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComplainNovelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComplainNovelRequest) ProtoMessage() {}

func (x *DeleteComplainNovelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usernovels_usernovels_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComplainNovelRequest.ProtoReflect.Descriptor instead.
func (*DeleteComplainNovelRequest) Descriptor() ([]byte, []int) {
	return file_usernovels_usernovels_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteComplainNovelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_usernovels_usernovels_proto protoreflect.FileDescriptor

var file_usernovels_usernovels_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x05, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x73, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52,
	0x06, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x60, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x6d, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49,
	0x64, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x2a,
	0x3e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x41, 0x56, 0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x57,
	0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x03, 0x2a,
	0x2f, 0x0a, 0x0b, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x09,
	0x0a, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x10, 0x02,
	0x32, 0xc2, 0x05, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x23, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x57, 0x0a, 0x19, 0x6e, 0x65, 0x77, 0x65, 0x6c, 0x6c, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x42, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4e, 0x65, 0x77, 0x65, 0x6c, 0x6c, 0x61, 0x2d, 0x48, 0x51, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_usernovels_usernovels_proto_rawDescOnce sync.Once
	file_usernovels_usernovels_proto_rawDescData = file_usernovels_usernovels_proto_rawDesc
)

func file_usernovels_usernovels_proto_rawDescGZIP() []byte {
	file_usernovels_usernovels_proto_rawDescOnce.Do(func() {
		file_usernovels_usernovels_proto_rawDescData = protoimpl.X.CompressGZIP(file_usernovels_usernovels_proto_rawDescData)
	})
	return file_usernovels_usernovels_proto_rawDescData
}

var file_usernovels_usernovels_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_usernovels_usernovels_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_usernovels_usernovels_proto_goTypes = []any{
	(UserNovelsType)(0),                // 0: usernovels.UserNovelsType
	(NovelLength)(0),                   // 1: usernovels.NovelLength
	(*Genre)(nil),                      // 2: usernovels.Genre
	(*Novel)(nil),                      // 3: usernovels.Novel
	(*GetUsersNovelsRequest)(nil),      // 4: usernovels.GetUsersNovelsRequest
	(*GetUsersNovelsResponse)(nil),     // 5: usernovels.GetUsersNovelsResponse
	(*SetNovelRatingRequest)(nil),      // 6: usernovels.SetNovelRatingRequest
	(*CommentUserData)(nil),            // 7: usernovels.CommentUserData
	(*Comment)(nil),                    // 8: usernovels.Comment
	(*GetCommentsRequest)(nil),         // 9: usernovels.GetCommentsRequest
	(*GetCommentsResponse)(nil),        // 10: usernovels.GetCommentsResponse
	(*CommentNovelRequest)(nil),        // 11: usernovels.CommentNovelRequest
	(*CommentNovelResponse)(nil),       // 12: usernovels.CommentNovelResponse
	(*DeleteCommentNovelRequest)(nil),  // 13: usernovels.DeleteCommentNovelRequest
	(*ComplainNovelRequest)(nil),       // 14: usernovels.ComplainNovelRequest
	(*ComplainNovelResponse)(nil),      // 15: usernovels.ComplainNovelResponse
	(*GetUserComplainsRequest)(nil),    // 16: usernovels.GetUserComplainsRequest
	(*Complain)(nil),                   // 17: usernovels.Complain
	(*GetUserComplainsResponse)(nil),   // 18: usernovels.GetUserComplainsResponse
	(*DeleteComplainNovelRequest)(nil), // 19: usernovels.DeleteComplainNovelRequest
	(*timestamppb.Timestamp)(nil),      // 20: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 21: google.protobuf.Empty
}
var file_usernovels_usernovels_proto_depIdxs = []int32{
	1,  // 0: usernovels.Novel.length:type_name -> usernovels.NovelLength
	2,  // 1: usernovels.Novel.genre:type_name -> usernovels.Genre
	0,  // 2: usernovels.GetUsersNovelsRequest.type:type_name -> usernovels.UserNovelsType
	3,  // 3: usernovels.GetUsersNovelsResponse.novels:type_name -> usernovels.Novel
	20, // 4: usernovels.Comment.created_at:type_name -> google.protobuf.Timestamp
	7,  // 5: usernovels.Comment.user:type_name -> usernovels.CommentUserData
	8,  // 6: usernovels.GetCommentsResponse.comments:type_name -> usernovels.Comment
	17, // 7: usernovels.GetUserComplainsResponse.complains:type_name -> usernovels.Complain
	4,  // 8: usernovels.UserNovelsService.GetUsersNovels:input_type -> usernovels.GetUsersNovelsRequest
	6,  // 9: usernovels.UserNovelsService.SetNovelRating:input_type -> usernovels.SetNovelRatingRequest
	9,  // 10: usernovels.UserNovelsService.GetNovelComments:input_type -> usernovels.GetCommentsRequest
	11, // 11: usernovels.UserNovelsService.CommentNovel:input_type -> usernovels.CommentNovelRequest
	13, // 12: usernovels.UserNovelsService.DeleteCommentNovel:input_type -> usernovels.DeleteCommentNovelRequest
	16, // 13: usernovels.UserNovelsService.GetUserComplains:input_type -> usernovels.GetUserComplainsRequest
	14, // 14: usernovels.UserNovelsService.ComplainNovel:input_type -> usernovels.ComplainNovelRequest
	19, // 15: usernovels.UserNovelsService.DeleteComplainNovel:input_type -> usernovels.DeleteComplainNovelRequest
	5,  // 16: usernovels.UserNovelsService.GetUsersNovels:output_type -> usernovels.GetUsersNovelsResponse
	21, // 17: usernovels.UserNovelsService.SetNovelRating:output_type -> google.protobuf.Empty
	10, // 18: usernovels.UserNovelsService.GetNovelComments:output_type -> usernovels.GetCommentsResponse
	12, // 19: usernovels.UserNovelsService.CommentNovel:output_type -> usernovels.CommentNovelResponse
	21, // 20: usernovels.UserNovelsService.DeleteCommentNovel:output_type -> google.protobuf.Empty
	18, // 21: usernovels.UserNovelsService.GetUserComplains:output_type -> usernovels.GetUserComplainsResponse
	15, // 22: usernovels.UserNovelsService.ComplainNovel:output_type -> usernovels.ComplainNovelResponse
	21, // 23: usernovels.UserNovelsService.DeleteComplainNovel:output_type -> google.protobuf.Empty
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_usernovels_usernovels_proto_init() }
func file_usernovels_usernovels_proto_init() {
	if File_usernovels_usernovels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_usernovels_usernovels_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Novel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersNovelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersNovelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SetNovelRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CommentUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CommentNovelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CommentNovelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCommentNovelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ComplainNovelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ComplainNovelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserComplainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Complain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserComplainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usernovels_usernovels_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteComplainNovelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usernovels_usernovels_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_usernovels_usernovels_proto_goTypes,
		DependencyIndexes: file_usernovels_usernovels_proto_depIdxs,
		EnumInfos:         file_usernovels_usernovels_proto_enumTypes,
		MessageInfos:      file_usernovels_usernovels_proto_msgTypes,
	}.Build()
	File_usernovels_usernovels_proto = out.File
	file_usernovels_usernovels_proto_rawDesc = nil
	file_usernovels_usernovels_proto_goTypes = nil
	file_usernovels_usernovels_proto_depIdxs = nil
}
