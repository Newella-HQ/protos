syntax = "proto3";

package user;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/Newella-HQ/protos/user";
option java_multiple_files = true;
option java_package = "newella.protos.user";
option java_outer_classname = "UserProto";

// Auth token must be transferred through metadata by 'authentication' key
// Belonging to user determines by id in authentication access token

// lower case letters for db compatibility
enum Role {
  user = 0;
  moderator = 1;
  admin = 2;
}

message User {
  string id = 1;
  string username = 2;
  string real_name = 3;
  string description = 4;
  string email = 5;
  string picture = 6;
  Role role = 7;
  google.protobuf.Timestamp created_at = 8;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUsersRequest {
  string search = 1;
  int64 limit = 2;
  int64 page = 3;
}

message GetUsersResponse {
  repeated User users = 1;
}

message ChangeUsernameRequest {
  string username = 1;
}

message ChangeUserDataRequest {
  string real_name = 1;
  string description = 2;
}

message ChangePictureRequest {
  bytes chunk = 1;
}

message ChangePictureResponse {
  string picture = 1;
}

message ChangeRoleRequest {
  string user_id = 1;
  Role role = 2;
}

message GetSubsRequest {
    string user_id = 1;
    int64 limit = 2;
    int64 page = 3;
}

message GetSubsResponse {
  repeated User users = 1;
}

message SubRequest {
  string user_id = 1;
}

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc ChangeUsername(ChangeUsernameRequest) returns (google.protobuf.Empty);
  rpc ChangeUserData(ChangeUserDataRequest) returns (google.protobuf.Empty);
  rpc ChangePicture(stream ChangePictureRequest) returns (ChangePictureResponse);
  rpc ChangeRole(ChangeRoleRequest) returns (google.protobuf.Empty);

  rpc GetSubscribers(GetSubsRequest) returns (GetSubsResponse);
  rpc GetSubscriptions(GetSubsRequest) returns (GetSubsResponse);
  rpc Subscribe(SubRequest) returns (google.protobuf.Empty);
  rpc Unsubscribe(SubRequest) returns (google.protobuf.Empty);
  rpc DeleteSubscriber(SubRequest) returns (google.protobuf.Empty);
}